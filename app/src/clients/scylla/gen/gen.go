// Code generated by "gocqlx/cmd/schemagen"; DO NOT EDIT.

package gen

import (
	"github.com/scylladb/gocqlx/v3/table"
	"time"
)

// Table models.
var (
	AttachmentsByChat = table.New(table.Metadata{
		Name: "attachments_by_chat",
		Columns: []string{
			"attachment_id",
			"chat_id",
			"deleted_at",
			"filename",
			"height",
			"message_id",
			"mime_type",
			"sender_id",
			"size_bytes",
			"thumbnail_url",
			"uploaded_at",
			"url",
			"width",
		},
		PartKey: []string{
			"chat_id",
		},
		SortKey: []string{
			"message_id",
			"attachment_id",
		},
	})

	AttachmentsById = table.New(table.Metadata{
		Name: "attachments_by_id",
		Columns: []string{
			"attachment_id",
			"chat_id",
			"filename",
			"height",
			"message_id",
			"mime_type",
			"sender_id",
			"size_bytes",
			"thumbnail_url",
			"uploaded_at",
			"url",
			"width",
		},
		PartKey: []string{
			"attachment_id",
		},
		SortKey: []string{},
	})

	InboxByUser = table.New(table.Metadata{
		Name: "inbox_by_user",
		Columns: []string{
			"chat_avatar_url",
			"chat_display_name",
			"chat_id",
			"chat_type",
			"last_message_content_preview",
			"last_message_id",
			"last_message_sender_id",
			"updated_at",
			"user_id",
		},
		PartKey: []string{
			"user_id",
		},
		SortKey: []string{
			"updated_at",
			"chat_id",
		},
	})

	MentionsByUser = table.New(table.Metadata{
		Name: "mentions_by_user",
		Columns: []string{
			"chat_id",
			"day_bucket",
			"mentioned_user_id",
			"message_content_preview",
			"message_id",
			"sender_id",
		},
		PartKey: []string{
			"mentioned_user_id",
			"day_bucket",
		},
		SortKey: []string{
			"message_id",
		},
	})

	MessagesByChat = table.New(table.Metadata{
		Name: "messages_by_chat",
		Columns: []string{
			"chat_id",
			"client_metadata",
			"content",
			"day_bucket",
			"deleted_at",
			"edited_at",
			"expires_at",
			"forwarded_from_message_id",
			"message_id",
			"message_type",
			"reply_to_message_id",
			"scheduled_at",
			"sender_id",
		},
		PartKey: []string{
			"chat_id",
			"day_bucket",
		},
		SortKey: []string{
			"message_id",
		},
	})

	MessagesById = table.New(table.Metadata{
		Name: "messages_by_id",
		Columns: []string{
			"chat_id",
			"content",
			"deleted_at",
			"edited_at",
			"expires_at",
			"forwarded_from_message_id",
			"message_id",
			"message_type",
			"reply_to_message_id",
			"sender_id",
		},
		PartKey: []string{
			"message_id",
		},
		SortKey: []string{},
	})

	PinnedMessagesByChat = table.New(table.Metadata{
		Name: "pinned_messages_by_chat",
		Columns: []string{
			"chat_id",
			"message_content_preview",
			"message_id",
			"pinned_at",
			"pinner_id",
		},
		PartKey: []string{
			"chat_id",
		},
		SortKey: []string{
			"pinned_at",
			"message_id",
		},
	})

	ReactionsByMessage = table.New(table.Metadata{
		Name: "reactions_by_message",
		Columns: []string{
			"message_id",
			"reacted_at",
			"reaction_emoji",
			"reactor_id",
		},
		PartKey: []string{
			"message_id",
		},
		SortKey: []string{
			"reactor_id",
			"reaction_emoji",
		},
	})

	ReadReceiptsByUser = table.New(table.Metadata{
		Name: "read_receipts_by_user",
		Columns: []string{
			"chat_id",
			"last_read_at",
			"last_read_message_id",
			"user_id",
		},
		PartKey: []string{
			"user_id",
		},
		SortKey: []string{
			"chat_id",
		},
	})

	SchemaVersions = table.New(table.Metadata{
		Name: "schema_versions",
		Columns: []string{
			"applied_at",
			"script_name",
		},
		PartKey: []string{
			"script_name",
		},
		SortKey: []string{},
	})
)

// Index models.
var (
	InboxByChatIdxIndex = table.New(table.Metadata{
		Name: "inbox_by_chat_idx_index",
		Columns: []string{
			"chat_id",
			"updated_at",
			"user_id",
		},
		PartKey: []string{
			"user_id",
		},
		SortKey: []string{
			"chat_id",
			"updated_at",
		},
	})

	MentionsByChatIdxIndex = table.New(table.Metadata{
		Name: "mentions_by_chat_idx_index",
		Columns: []string{
			"chat_id",
			"day_bucket",
			"mentioned_user_id",
			"message_id",
		},
		PartKey: []string{
			"mentioned_user_id",
			"day_bucket",
		},
		SortKey: []string{
			"chat_id",
			"message_id",
		},
	})
)

// Table structs.
type AttachmentsByChatStruct struct {
	AttachmentId [16]byte
	ChatId       [16]byte
	DeletedAt    time.Time
	Filename     string
	Height       int16
	MessageId    [16]byte
	MimeType     string
	SenderId     [16]byte
	SizeBytes    int32
	ThumbnailUrl string
	UploadedAt   time.Time
	Url          string
	Width        int16
}
type AttachmentsByIdStruct struct {
	AttachmentId [16]byte
	ChatId       [16]byte
	Filename     string
	Height       int16
	MessageId    [16]byte
	MimeType     string
	SenderId     [16]byte
	SizeBytes    int32
	ThumbnailUrl string
	UploadedAt   time.Time
	Url          string
	Width        int16
}
type InboxByUserStruct struct {
	ChatAvatarUrl             string
	ChatDisplayName           string
	ChatId                    [16]byte
	ChatType                  string
	LastMessageContentPreview string
	LastMessageId             [16]byte
	LastMessageSenderId       [16]byte
	UpdatedAt                 time.Time
	UserId                    [16]byte
}
type MentionsByUserStruct struct {
	ChatId                [16]byte
	DayBucket             time.Time
	MentionedUserId       [16]byte
	MessageContentPreview string
	MessageId             [16]byte
	SenderId              [16]byte
}
type MessagesByChatStruct struct {
	ChatId                 [16]byte
	ClientMetadata         map[string]string
	Content                string
	DayBucket              time.Time
	DeletedAt              time.Time
	EditedAt               time.Time
	ExpiresAt              time.Time
	ForwardedFromMessageId [16]byte
	MessageId              [16]byte
	MessageType            string
	ReplyToMessageId       [16]byte
	ScheduledAt            time.Time
	SenderId               [16]byte
}
type MessagesByIdStruct struct {
	ChatId                 [16]byte
	Content                string
	DeletedAt              time.Time
	EditedAt               time.Time
	ExpiresAt              time.Time
	ForwardedFromMessageId [16]byte
	MessageId              [16]byte
	MessageType            string
	ReplyToMessageId       [16]byte
	SenderId               [16]byte
}
type PinnedMessagesByChatStruct struct {
	ChatId                [16]byte
	MessageContentPreview string
	MessageId             [16]byte
	PinnedAt              time.Time
	PinnerId              [16]byte
}
type ReactionsByMessageStruct struct {
	MessageId     [16]byte
	ReactedAt     time.Time
	ReactionEmoji string
	ReactorId     [16]byte
}
type ReadReceiptsByUserStruct struct {
	ChatId            [16]byte
	LastReadAt        time.Time
	LastReadMessageId [16]byte
	UserId            [16]byte
}
type SchemaVersionsStruct struct {
	AppliedAt  time.Time
	ScriptName string
}

// Index structs.
type InboxByChatIdxIndexStruct struct {
	ChatId    [16]byte
	UpdatedAt time.Time
	UserId    [16]byte
}
type MentionsByChatIdxIndexStruct struct {
	ChatId          [16]byte
	DayBucket       time.Time
	MentionedUserId [16]byte
	MessageId       [16]byte
}
