// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package gen

import (
	"context"
	"database/sql"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	// --
	// Chat Participant Management
	// --
	AddChatParticipant(ctx context.Context, arg AddChatParticipantParams) (ChatParticipant, error)
	// This uses sqlc's :copyfrom for efficient bulk inserts.
	AddOneTimePreKeys(ctx context.Context, arg []AddOneTimePreKeysParams) (int64, error)
	// --
	// Chat Management
	// --
	CreateChat(ctx context.Context, arg CreateChatParams) (Chat, error)
	// --
	// Device & Signal Key Management
	// --
	CreateDevice(ctx context.Context, arg CreateDeviceParams) (ChattingDevice, error)
	CreateDeviceSignalKeys(ctx context.Context, arg CreateDeviceSignalKeysParams) (DeviceSignalKey, error)
	// queries.sql
	// --
	// User Management
	// --
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteUser(ctx context.Context, id int32) error
	GetChatByID(ctx context.Context, id int32) (Chat, error)
	GetChatParticipant(ctx context.Context, arg GetChatParticipantParams) (ChatParticipant, error)
	// Gets all current participants of a chat.
	GetChatParticipants(ctx context.Context, chatID int32) ([]GetChatParticipantsRow, error)
	GetUserActiveDevices(ctx context.Context, userID int32) ([]ChattingDevice, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByID(ctx context.Context, id int32) (User, error)
	// Gets all non-left chats for a given user.
	GetUserChats(ctx context.Context, userID int32) ([]Chat, error)
	// This demonstrates how to call the custom function you defined.
	GetUserSignalPreKeyBundle(ctx context.Context, arg GetUserSignalPreKeyBundleParams) ([]sql.NullString, error)
	RemoveChatParticipant(ctx context.Context, arg RemoveChatParticipantParams) error
	// This uses the Full-Text Search index on the `name` column.
	SearchPublicGroupChatsByName(ctx context.Context, toTsquery string) ([]SearchPublicGroupChatsByNameRow, error)
	UpdateChatTopic(ctx context.Context, arg UpdateChatTopicParams) error
	UpdateDeviceLastSeen(ctx context.Context, arg UpdateDeviceLastSeenParams) (pgtype.Timestamptz, error)
	UpdateParticipantLastRead(ctx context.Context, arg UpdateParticipantLastReadParams) error
	UpdateParticipantRole(ctx context.Context, arg UpdateParticipantRoleParams) (ChatParticipant, error)
	UpdateUserActivity(ctx context.Context, arg UpdateUserActivityParams) error
	UpdateUserPassword(ctx context.Context, arg UpdateUserPasswordParams) error
}

var _ Querier = (*Queries)(nil)
